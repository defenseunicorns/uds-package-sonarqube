## this is the default value
# OpenShift:
#   enabled: false

edition: "community"

# Name of the secret from which to load additional properties: https://community.sonarsource.com/t/additional-sonar-properties-to-load-from-a-secret/73748
# This secret will be created by the uds operator based on the sso spec defined in chart/templates/uds-package.yaml
sonarSecretProperties: sonarqube-sso

# monitoring:
#   enabled: true

prometheusExporter:
  enabled: true
  # jmx_prometheus_javaagent version to download from Maven Central
  version: "0.17.2"
  # Alternative full download URL for the jmx_prometheus_javaagent.jar (overrides prometheusExporter.version)
  # downloadURL: ""
  # if you need to ignore TLS certificates for whatever reason enable the following flag
  # noCheckCertificate: false

  # Ports for the jmx prometheus agent to export metrics at
  webBeanPort: 8000
  ceBeanPort: 8001

  config:
    rules:
      - pattern: ".*"
  # Overrides config for the CE process Prometheus exporter (by default, the same rules are used for both the Web and CE processes).
  # ceConfig:
  #   rules:
  #     - pattern: ".*"
  # image: curlimages/curl:8.2.1
  # For use behind a corporate proxy when downloading prometheus
  # httpProxy: ""
  # httpsProxy: ""
  # noProxy: ""
  # Reuse default initcontainers.securityContext that match restricted pod security standard
  # securityContext: {}

prometheusMonitoring:
  # Generate a Prometheus Pod Monitor (https://github.com/coreos/prometheus-operator)
  #
  podMonitor:
    # Create PodMonitor Resource for Prometheus scraping
    enabled: true
    # (DEPRECATED) Specify a custom namespace where the PodMonitor will be created.
    # This value should not be set, as the PodMonitor's namespace has to match the Release Namespace.
    # namespace: "default"
    # Specify the interval how often metrics should be scraped
    interval: 30s
    # Specify the timeout after a scrape is ended
    # scrapeTimeout: ""
    # Name of the label on target services that prometheus uses as job name
    # jobLabel: ""

initSysctl:
  enabled: false

## DEPRECATED: Use initSysctl.enabled instead
# elasticsearch:
#   configureNode: false

jdbcOverwrite:
  enabled: true
  jdbcUrl: jdbc:postgresql://###ZARF_VAR_SONARQUBE_DB_ENDPOINT###:5432/###ZARF_VAR_SONARQUBE_DB_NAME###
  jdbcUsername: ###ZARF_VAR_SONARQUBE_DB_USERNAME###
  jdbcPassword: null
  jdbcSecretName: sonarqube-postgres
  jdbcSecretPasswordKey: password

postgresql:
  enabled: false
  # postgresqlServer: ###ZARF_VAR_SONARQUBE_DB_ENDPOINT###
  # existingSecret: "sonarqube-postgres"
  # existingSecretPasswordKey: "password"
  # postgresqlUsername: ###ZARF_VAR_SONARQUBE_DB_USERNAME###
  # postgresqlDatabase: ###ZARF_VAR_SONARQUBE_DB_NAME###
  # service:
  #   port: 5432
