apiVersion: uds.dev/v1alpha1
kind: Package
metadata:
  name: sonarqube
  namespace: {{ .Release.Namespace }}
spec:
  {{- if .Values.sso.enabled }}
  sso:
    - name: Sonarqube Client
      clientId: uds-core-sonarqube
      redirectUris:
        - "https://sonarqube.uds.dev/oauth2/callback/saml"
      protocol: saml
      defaultClientScopes:
        - "mapper-saml-email-email"
        - "mapper-saml-username-login"
        - "mapper-saml-username-name"

      attributes:
        saml.client.signature: "false"

      secretName: sonarqube-sso
      secretTemplate:
        secret.properties: |
            sonar.auth.saml.enabled: {{ .Values.sso.enabled }}
            sonar.core.serverBaseURL: https://sonarqube.{{ .Values.domain }}
            sonar.auth.saml.applicationId: uds-core-sonarqube
            sonar.auth.saml.providerName: Keycloak
            sonar.auth.saml.providerId: https://sso.{{ .Values.domain }}/realms/uds
            sonar.auth.saml.loginUrl: https://sso.{{ .Values.domain }}/realms/uds/protocol/saml
            sonar.auth.saml.user.login: {{ .Values.sso.saml.user.login }}
            sonar.auth.saml.user.name: {{ .Values.sso.saml.user.name }}
            sonar.auth.saml.user.email: {{ .Values.sso.saml.user.email }}
            sonar.auth.saml.certificate.secured: clientField(samlIdpCertificate)
  {{- end }}
  network:
    expose:
      - service: sonarqube-sonarqube
        podLabels:
          app: sonarqube
        gateway: tenant
        host: sonarqube
        port: 9000
    allow:
      # Todo: wide open for hitting in-cluster or external postgres
      - direction: Egress
        podLabels:
          app: sonarqube
        remoteGenerated: Anywhere
